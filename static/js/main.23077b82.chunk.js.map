{"version":3,"sources":["useStream.js","EventList.js","StreamingColumn.js","Member.js","Bubble.js","Comment.js","Photo.js","WorldMap.js","RsvpStream.js","App.js","serviceWorker.js","index.js","Comment.module.scss","StreamingColumn.module.scss","Photo.module.scss","Member.module.css","RsvpStream.module.scss","Bubble.module.scss","App.module.css"],"names":["ids","photos","comments","rsvp","useStream","path","max","arguments","length","undefined","_useState","useState","_useState2","Object","slicedToArray","latestMessage","saveMessage","_useState3","_useState4","messageList","setMessageList","useEffect","oldMessages","newMessages","_","compact","concat","slice","window","__sockets__","onopen","console","log","onclose","event","code","JSON","stringify","addEventListener","message","parse","data","id","EventList","_ref","RenderComponent","rowHeight","containerHeight","containerWidth","getListRef","otherProps","objectWithoutProperties","scrolledToBottom","useRef","listRef","latestMessageRef","takeRight","current","listProps","rowCount","height","width","style","scrollBehavior","scrollToAlignment","onRowsRendered","_ref2","stopIndex","latestId","get","rowRenderer","_ref3","index","key","react_default","a","createElement","assign","scrollToIndex","es","ref","StreamingColumn","socketKey","title","className","styles","root","header","onClick","scrollToRow","list","src_EventList","photoWidth","Member","_ref$member","member","memberName","member_name","memberPhoto","photo","react","src","alt","name","Bubble","comment","bubbleLeft","bubbleRight","react_dotdotdot_src_default","clamp","Comment","_classNames","city","eventName","eventLocation","dateTime","Date","mtime","toLocaleString","classNames","defineProperty","commentLeft","commentRight","src_Member","src_Bubble","Photo","photo_link","footer","LAND_COLORS","getCoordinates","coordinates","venue","push","lon","lat","group","group_lon","group_lat","WorldMap","x","y","lib","projection","zoom","center","geography","process","geographies","map","i","fill","random","stroke","strokeWidth","outline","cacheId","default","hover","pressed","marker","cx","cy","r","response","clipPath","xlinkHref","background","CHICAGO","RsvpStream","mapCenter","setMapCenter","snapToEvent","setSnapToEvent","snapNext","mapContainer","toggle","type","value","onChange","prevValue","react_motion","defaultStyle","spring","stiffness","damping","src_WorldMap","WebSocket","App","columns","src_StreamingColumn","src_RsvpStream","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","buttonContainer","button","mapLabel"],"mappings":"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","file":"static/js/main.23077b82.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\n\nimport _ from 'lodash'\n\nlet ids = {\n  photos: 0,\n  comments: 0,\n  rsvp: 0,\n}\nconst DEFAULT_MAX_MESSAGES = 1000\n\nconst useStream = (path, max = DEFAULT_MAX_MESSAGES) => {\n  const [latestMessage, saveMessage] = useState()\n  const [messageList, setMessageList] = useState([])\n\n  useEffect(() => {\n    setMessageList(oldMessages => {\n      const newMessages = _.compact(oldMessages.concat(latestMessage))\n      return newMessages.length > max\n        ? newMessages.slice(1)\n        : newMessages\n    })\n  }, [latestMessage])\n\n  const initSocket = () => {\n    window.__sockets__[path].onopen = () => console.log(`${path} socket open`)\n    window.__sockets__[path].onclose = (event, code) =>\n      console.log(`${path} socket closed: ${JSON.stringify(event)}`)\n    window.__sockets__[path].addEventListener('message', message =>\n      saveMessage({\n        message: JSON.parse(message.data),\n        id: ids[path]++,\n      })\n    )\n  }\n\n  useEffect(() => {\n    initSocket()\n  }, [])\n\n  return { messageList }\n}\n\nexport default useStream","import React, { useRef, useEffect } from 'react'\n\nimport _ from 'lodash'\n\nimport { List } from 'react-virtualized'\n\nconst EventList = ({\n  messageList,\n  RenderComponent,\n  rowHeight,\n  containerHeight,\n  containerWidth,\n  getListRef,\n  ...otherProps,\n}) => {\n  const scrolledToBottom = useRef(true)\n  const listRef = useRef()\n  const latestMessageRef = useRef(_.takeRight(messageList))\n\n  useEffect(() => {\n    latestMessageRef.current = _.takeRight(messageList)\n  }, [messageList])\n\n  const listProps = {\n    rowHeight,\n    rowCount: messageList.length,\n    height: containerHeight,\n    width: containerWidth,\n    style: { scrollBehavior: 'smooth' },\n    scrollToAlignment: 'end',\n    onRowsRendered: ({ stopIndex }) => {\n      const latestId = _.get(latestMessageRef, 'current[0].id')\n      scrolledToBottom.current = stopIndex === latestId\n    },\n    rowRenderer: ({ index, key, style }) =>\n      messageList[index] ? (\n        <RenderComponent\n          message={messageList[index].message}\n          index={index}\n          style={style}\n          key={messageList[index].id}\n          {...otherProps}\n        />\n      ) : null,\n  }\n\n  getListRef(listRef.current)\n\n  if (scrolledToBottom.current) {\n    listProps.scrollToIndex = messageList.length - 1\n  }\n\n  return <List {...listProps} ref={listRef} />\n}\n\nexport default EventList","import React, { useRef } from 'react'\n\nimport { AutoSizer } from 'react-virtualized'\n\nimport useStream from './useStream'\nimport EventList from './EventList'\n\nimport styles from './StreamingColumn.module.scss'\n\nconst StreamingColumn = ({ rowHeight, RenderComponent, socketKey, title }) => {\n  const { messageList } = useStream(socketKey)\n  const listRef = useRef()\n\n  return (\n    <div className={styles.root}>\n     <div className={styles.header}>\n        <div className={styles.title}>{title}</div>\n        <button\n          onClick={() => {\n            listRef.current.scrollToRow(messageList.length - 1)\n          }}\n        >\n          Jump to latest\n        </button>\n      </div>\n      <div className={styles.list}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <EventList\n              messageList={messageList}\n              rowHeight={rowHeight}\n              containerHeight={height}\n              containerWidth={width}\n              RenderComponent={RenderComponent}\n              photoWidth={width}\n              getListRef={ref => {\n                listRef.current = ref\n              }}\n            />\n          )}\n        </AutoSizer>\n      </div>\n    </div>\n  )\n}\n\nexport default StreamingColumn","import * as React from 'react'\n\nimport styles from './Member.module.css'\n\nconst Member = ({ member: { member_name: memberName, photo: memberPhoto } }) => (\n  <div className={styles.root}>\n    <img src={memberPhoto} className={styles.photo} alt={`Avatar for ${memberName}`} />\n    <div className={styles.name}>{memberName}</div>\n  </div>\n)\n\nexport default Member","import * as React from 'react'\n\nimport Dotdotdot from 'react-dotdotdot'\n\nimport styles from './Bubble.module.scss'\n\nconst Bubble = ({ comment, index }) => (\n  <div className={index % 2 === 0 ? styles.bubbleLeft : styles.bubbleRight}>\n    <Dotdotdot clamp=\"auto\">\n      {comment}\n    </Dotdotdot>\n  </div>\n)\n\nexport default Bubble","import * as React from 'react'\n\nimport classNames from 'classnames'\nimport _ from 'lodash'\n\nimport Member from './Member'\nimport Bubble from './Bubble'\n\nimport styles from './Comment.module.scss'\n\nexport const COMMENT_HEIGHT = 170\n\nconst Comment = ({ message, index, style }) => {\n  const city = _.get(message, 'group.city')\n  const eventName = _.get(message, 'event.event_name')\n\n  return (\n    <div className={styles.root} style={style}>\n      <div className={styles.title}>\n        <div className={styles.eventName}>\n          {`${eventName}, `}\n        </div>\n        <div className={styles.eventLocation}>\n          {city}\n        </div>\n        <div className={styles.dateTime}>\n          {new Date(message.mtime).toLocaleString()}\n        </div>\n      </div>\n      <div\n        className={classNames({\n          [styles.commentLeft]: index % 2 === 0,\n          [styles.commentRight]: index % 2 !== 0,\n        })}\n      >\n        <Member member={message.member} />\n        <Bubble comment={message.comment} index={index} />\n      </div>\n    </div>\n  )\n}\n\nexport default Comment","import * as React from 'react'\nimport _ from 'lodash'\n\nimport styles from './Photo.module.scss'\n\nexport const PHOTO_HEIGHT = 545\n\nconst Photo = ({ message, photoWidth, style }) => (\n  <div style={style} className={styles.root}>\n    <div className={styles.header}>\n      {_.get(message, 'photo_album.event.name')}\n    </div>\n    <img\n      className={styles.photo}\n      src={message.photo_link}\n      alt={_.get(message, 'photo_album.event.name')}\n    />\n    <div className={styles.footer}>\n      <span>{new Date(message.mtime).toLocaleString()}</span>\n      <span>by {_.get(message, 'member.name')}</span>\n    </div>\n  </div>\n)\n\nexport default Photo\n","import React from 'react'\nimport _ from 'lodash'\n\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker,\n} from 'react-simple-maps'\n\nconst LAND_COLORS = ['#09BC8A', '#92AA83', '#79B473', '#86BAA1', '#A0E8AF']\n\nexport const getCoordinates = rsvp => {\n  const coordinates = []\n  if (rsvp.venue) {\n    coordinates.push(rsvp.venue.lon, rsvp.venue.lat)\n  } else {\n    coordinates.push(rsvp.group.group_lon, rsvp.group.group_lat)\n  }\n  return coordinates\n}\n\nconst WorldMap = ({ height, width, x, y, messageList }) => (\n  <ComposableMap height={height} width={width} projection=\"miller\">\n    <ZoomableGroup zoom={6} center={[x, y]}>\n      <Geographies geography={`${process.env.PUBLIC_URL}/world-50m.json`}>\n        {(geographies, projection) =>\n          geographies.map((geography, i) => {\n            const style = {\n              fill: LAND_COLORS[_.random(0, LAND_COLORS.length - 1)],\n              stroke: '#FFF',\n              strokeWidth: 0.5,\n              outline: 'none',\n            }\n            return (\n              <Geography\n                key={`geography-${i}`}\n                cacheId={`geography-${i}`}\n                geography={geography}\n                projection={projection}\n                style={{\n                  default: style,\n                  hover: style,\n                  pressed: style,\n                }}\n              />\n            )\n          })\n        }\n      </Geographies>\n      <Markers>\n        {messageList.map(rsvp => {\n          const { message, id } = rsvp\n          const coordinates = getCoordinates(message)\n          return (\n            <Marker key={id} marker={{ coordinates }}>\n              <defs>\n                <clipPath id=\"circleView\">\n                  <circle cx=\"40\" cy=\"20\" r=\"20\" fill=\"#FFFFFF\" />\n                </clipPath>\n              </defs>\n              <g>\n                <circle\n                  cx=\"40\"\n                  cy=\"20\"\n                  r=\"25\"\n                  fill={message.response === 'yes' ? 'green' : 'red'}\n                />\n                <image\n                  clipPath=\"url(#circleView)\"\n                  xlinkHref={_.get(message, 'member.photo')}\n                  width={80}\n                  height={80}\n                  style={{ background: 'white' }}\n                />\n              </g>\n            </Marker>\n          )\n        })}\n      </Markers>\n    </ZoomableGroup>\n  </ComposableMap>\n)\n\nexport default WorldMap","import React, { useState, useEffect, useRef } from 'react'\nimport _ from 'lodash'\n\nimport { AutoSizer } from 'react-virtualized'\nimport { Motion, spring } from 'react-motion'\n\nimport WorldMap from './WorldMap'\nimport useStream from './useStream'\n\nimport { getCoordinates } from './WorldMap'\n\nimport styles from './RsvpStream.module.scss'\n\nconst CHICAGO = [-87, 41]\n\nconst RsvpStream = () => {\n  const { messageList } = useStream('rsvp', 25)\n  const [mapCenter, setMapCenter] = useState(CHICAGO)\n  const [snapToEvent, setSnapToEvent] = useState(false)\n  const snapNext = useRef(false)\n\n  useEffect(() => {\n    const latestMessage = _.takeRight(messageList)[0]\n    if (!latestMessage || !snapToEvent) return\n    if (!snapNext.current) {\n      snapNext.current = true\n      return\n    }\n    setMapCenter(getCoordinates(latestMessage.message))\n    snapNext.current = false\n  }, [messageList])\n  return (\n    <div className={styles.mapContainer}>\n      <div className={styles.title}>\n        RSVP\n        <div className={styles.toggle}>\n          <input\n            type=\"checkbox\"\n            value={snapToEvent}\n            onChange={() => setSnapToEvent(prevValue => !prevValue)}\n          />\n          Snap to latest\n        </div>\n      </div>\n      <AutoSizer>\n        {({ height, width }) => (\n          <Motion\n            defaultStyle={{\n              x: mapCenter[0],\n              y: mapCenter[1],\n            }}\n            style={{\n              x: spring(mapCenter[0], { stiffness: 210, damping: 20 }),\n              y: spring(mapCenter[1], { stiffness: 210, damping: 20 }),\n            }}\n          >\n            {({ x, y }) => (\n              <WorldMap\n                x={x}\n                y={y}\n                height={height}\n                width={width}\n                messageList={messageList}\n              />\n            )}\n          </Motion>\n        )}\n      </AutoSizer>\n    </div>\n  )\n}\n\nexport default RsvpStream","import * as React from 'react'\n\nimport StreamingColumn from './StreamingColumn'\nimport Comment, { COMMENT_HEIGHT } from './Comment'\nimport Photo, { PHOTO_HEIGHT } from './Photo'\nimport RsvpStream from './RsvpStream'\n\nimport styles from './App.module.css'\n\nwindow.__sockets__ = {\n  comments: new WebSocket('wss://stream.meetup.com/2/event_comments'),\n  rsvp: new WebSocket('wss://stream.meetup.com/2/rsvps'),\n  photos: new WebSocket('wss://stream.meetup.com/2/photos'),\n}\n\nconst App = () => {\n  return (\n    <div className={styles.root}>\n      <div className={styles.columns}>\n        <StreamingColumn\n          title=\"Comments\"\n          rowHeight={COMMENT_HEIGHT}\n          socketKey=\"comments\"\n          RenderComponent={Comment}\n        />\n        <RsvpStream />\n        <StreamingColumn\n          title=\"Photos\"\n          rowHeight={PHOTO_HEIGHT}\n          socketKey=\"photos\"\n          RenderComponent={Photo}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Comment_root__hJkHq\",\"commentLeft\":\"Comment_commentLeft__1vfNL\",\"commentRight\":\"Comment_commentRight__3aS2w\",\"title\":\"Comment_title__8MJma\",\"eventName\":\"Comment_eventName__C807I\",\"eventLocation\":\"Comment_eventLocation__1oj1p\",\"dateTime\":\"Comment_dateTime__3RxBa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"StreamingColumn_root__1cKUD\",\"title\":\"StreamingColumn_title__2PfBC\",\"header\":\"StreamingColumn_header__v67T8\",\"list\":\"StreamingColumn_list__1Gbp5\",\"buttonContainer\":\"StreamingColumn_buttonContainer__e-5Oy\",\"button\":\"StreamingColumn_button__1ef8m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Photo_root__1jl3m\",\"photo\":\"Photo_photo__1oxXc\",\"header\":\"Photo_header__2zE1F\",\"footer\":\"Photo_footer__1lM7d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Member_root__LFcju\",\"photo\":\"Member_photo__1ipAh\",\"name\":\"Member_name__1xArU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapContainer\":\"RsvpStream_mapContainer__UfPX2\",\"mapLabel\":\"RsvpStream_mapLabel__3F2UQ\",\"title\":\"RsvpStream_title__2jnKi\",\"toggle\":\"RsvpStream_toggle__1CkCx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bubbleLeft\":\"Bubble_bubbleLeft__2wWZI\",\"bubbleRight\":\"Bubble_bubbleRight__3yszd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__1M4S6\",\"title\":\"App_title__1M0hr\",\"columns\":\"App_columns__fhulz\"};"],"sourceRoot":""}